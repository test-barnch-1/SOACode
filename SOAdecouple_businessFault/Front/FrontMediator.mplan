<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 1.0 at [11/18/11 11:16 PM].-->
<Mediator name="FrontMediator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" wsdlTargetNamespace="http://www.amis.nl/front" xmlns="http://xmlns.oracle.com/sca/1.0/mediator">
   <operation name="GetAllDepartments" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="direct"
               name="SourceMediator.SourceMediator.GetAllDepartments">
            <action>
               <transform>
                  <part name="$out.Parameters"
                        function="xslt(xsl/InputParameters_To_InputParameters.xsl, $in.Parameters)"/>
               </transform>
               <invoke reference="SourceMediator.SourceMediator"
                       operation="GetAllDepartments">
                  <onReply>
                     <transform>
                        <part name="$out.Departments"
                              function="xslt(xsl/DepartmentsCollection_To_DepartmentsCollection.xsl, $in.Departments)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="GetAllEmployees" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="direct"
               name="SourceMediator.SourceMediator.GetAllEmployees">
            <action>
               <transform>
                  <part name="$out.Parameters"
                        function="xslt(xsl/InputParameters_To_InputParameters_2.xsl, $in.Parameters)"/>
               </transform>
               <invoke reference="SourceMediator.SourceMediator"
                       operation="GetAllEmployees">
                  <onReply>
                     <transform>
                        <part name="$out.Employees"
                              function="xslt(xsl/EmployeesCollection_To_EmployeesCollection.xsl, $in.Employees)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
   <operation name="ValidateDepartment" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="direct"
               name="ValidateDepartment.validatedepartment_client.process">
            <action>
               <transform>
                  <part name="$out.payload"
                        function="xslt(xsl/InputDepartment_To_InputDepartment.xsl, $in.Parameters)"/>
               </transform>
               <invoke reference="ValidateDepartment.validatedepartment_client"
                       operation="process">
                  <onReply>
                     <transform>
                        <part name="$out.Department"
                              function="xslt(xsl/Department_To_Department.xsl, $in.payload)"/>
                     </transform>
                     <reply/>
                  </onReply>
                  <onFault type="BusinessFault">
                     <transform>
                        <part name="$out.businessFault"
                              function="xslt(xsl/FaultType_To_BusinessFault.xsl, $in.businessFault)"/>
                     </transform>
                     <fault type="BusinessFault"/>
                  </onFault>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
</Mediator>
